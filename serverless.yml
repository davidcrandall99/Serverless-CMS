service: serverless-cms # NOTE: update this with your service name

# TO DO: 
# - add api authentication for writing

#provider information
provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}    

#custom variables to use with this stack
custom:
  ${file(resources/variables.yml)}

#service-wide environment variables
environment:
  pagesTable: ${self:custom.pagesTableName}
  usersTable: ${self:custom.usersTableName}
  categoriesTable: ${self:custom.categoriesTableName}
  siteTable: ${self:custom.siteTableName}
  userPool: ${self:custom.cognitoPoolName}

# you can add packaging information here
package:
  individually: true
  exclude:
    - resources/**
    - node_modules/**
    - lambdas/**
    - tests/**

# now, onto your app
functions:
  # the function to get and return page data
  getPage:
    role: readOnly
    package:
      include:
        - 'lambdas/getPage.js'
        - 'modules/logger.js'
        - 'modules/hasSlash.js'
    handler: 'lambdas/getPage.handler'
    environment:
      DYNAMODB_TABLE: ${self:custom.pagesTableName}
    events:
     - http:
        path: page/
        method: get
     - http:
        path: page/{proxy+}
        method: get
  
  # the function for writing a new page
  writePage:
    role: writePage
    handler: 'lambdas/writePage.handler'
    environment:
      DYNAMODB_TABLE: ${self:custom.pagesTableName}
    package:
      include:
        - 'lambdas/writePage.js'
        - 'modules/validate.js'
        - 'modules/logger.js'
    events:  
     - http:
        path: /write-page/
        method: post
  writeCategory:
    role: writePage
    handler: 'lambdas/writeCategory.handler'
    environment:
      DYNAMODB_TABLE: ${self:custom.pagesTableName}
    package:
      include:
        - 'lambdas/writeCategory.js'
        - 'modules/validate.js'
        - 'modules/logger.js'
    events:  
     - http:
        path: /write-category/
        method: post
        

resources:
  # DynamoDB
  - ${file(resources/dynamodb.yml)}
  
  # IAM roles for functions
  - ${file(resources/roles.yml)} 

  # Cognito Userpool for admins
  - ${file(resources/cognito.yml)}